
//CatchCatchCatch!!

	onerror *ErrorDialog

	#packopt name "CatchCatchCatch!!"
	#include "hspogg.as"
	#include "module/bullet.as"
	dmmini
	BulletInit

	title "CatchCatchCatch!!!"

	//タイトルメニューはここに書くぜ
*title_loop
	#include "title.as"

*game_start
	font "MS明朝",42,0

	dmmload "res/music.wav",0,1
	dmmload "res/damage.wav",1,0
	dmmload "res/ok.wav",2,0
	dmmload "res/catch.wav",3,0
	dmmload "res/score1000.wav",4,0
	dmmload "res/start.wav",5,0
	dmmload "res/end.wav",6,0

	#const OBJECT_TOTAL 16
	#const OBJECT_SIZE 30

	stick_color_r=255
	stick_color_g=0
	stick_color_b=0

	object_color_r=0
	object_color_g=255
	object_color_b=127

	bad_object_color_r=255
	bad_object_color_g=0
	bad_object_color_b=0


	dim object_x,OBJECT_TOTAL
	dim object_y,OBJECT_TOTAL
	dim object_change_x,OBJECT_TOTAL
	dim object_change_y,OBJECT_TOTAL
	dim object_exist,OBJECT_TOTAL

	dim bad_object_x,OBJECT_TOTAL
	dim bad_object_y,OBJECT_TOTAL
	dim bad_object_change_x,OBJECT_TOTAL
	dim bad_object_change_y,OBJECT_TOTAL
	dim bad_object_exist,OBJECT_TOTAL

*main_loop
	dmmstop -1
	score=0
	life=100
	player_y=380
	player_x=240

	BulletReset

	randomize

	repeat OBJECT_TOTAL
	object_x(cnt)=rnd(640)
	object_y(cnt)=-30-cnt*80
	object_change_x(cnt)=2-rnd(5)
	object_change_y(cnt)=2+rnd(2)
	object_exist(cnt)=1

	bad_object_x(cnt)=rnd(640)
	bad_object_y(cnt)=-30-cnt*80
	bad_object_change_x(cnt)=2-rnd(5)
	bad_object_change_y(cnt)=2+rnd(2)
	bad_object_exist(cnt)=1
	loop

	redraw 0
	color 0,0,0
	boxf
	pos 10,10
	color 255,255,255
	mes "Are you Ready?"
	redraw 1

	repeat 3
	dmmplay 2
	redraw 0
	mes str(3-cnt)
	redraw 1
	wait 100
	loop

	dmmplay 5
	redraw 0
	mes "Go!!"
	redraw 1
	wait 50
	dmmplay 0

*game_main
	repeat
	player_x=ginfo(0)-ginfo(4)	//プレイヤー移動
	if player_x<-30 : player_x=-30
	if player_x>670 : player_x=670

	//物を追加
	gosub *FallObjectAdd
	//物の落ちてる場所を計算
	gosub *FallObjectCalc
	//棒と接触しているかのチェック
	gosub *FallObjectCheck

	//ステージ弾幕演算命令
	gosub *StageBulletCalc

	//スコアが1000増えたことを通知
	gosub *ScoreSound

	redraw 0
	//背景を描画
	color 0,0,32
	gmode 3,0,0,64
	grect 320,240,0,640,480

	//自分の棒を描画
	color 0,0,255
	grect player_x,480,0,OBJECT_SIZE,200
	color stick_color_r,stick_color_g,stick_color_b
	line player_x,player_y-(OBJECT_SIZE/2),player_x,player_y+100

	//物を描画
	gosub *FallObjectDraw

	//ステージ弾幕描画命令
	gosub *StageBulletDraw

	//エフェクト
	gosub *FallObjectEffect

	//標線を描画
	color 255,0,0
	line 0,player_y,640,player_y

	//プレイヤーが画面外にいるとき、それを知らせる
	color 255,200,200
	if player_x<1 {
		line 0,400,50,400
		line 0,400,20,380
		line 0,400,20,420
	}
	if player_x>639 {
		line 590,400,640,400
		line 620,380,640,400
		line 620,420,640,400
	}

	//スコアを描画
	pos 10,430
	color 255,255,255
	mes "SCORE:"+score
	pos 390,430
	if life<0 : life=0
	mes "LIFE"+life

	redraw 1

	//ゲームオーバー
	if life=0 {
		dmmplay 6
		dialog "GAMEOVER!!\nSCORE : "+score+"\n再挑戦する?" , 2 , "System"
		if stat=6 {
			break
		}else{
			//ゲーム終了時のカットイン
			repeat 15
			gmode 3,0,0,15
			color 0,0,0
			grect 320,240,0,640,480
			pos 200,200
			color cnt*15,cnt*15,cnt*15
			font "MS明朝",42,0
			mes "COMET"
			font "MS明朝",24,0
			mes "Thank you for your playing!"
			mes "See you again...!"
			await 16
			loop
			wait 200
			repeat 15
			gmode 3,0,0,64
			color 0,0,0
			grect 320,240,0,640,480
			await 16
			loop
			mode="title"
			break
		}
	}
	await 16
	loop
	if mode="title" {
		mode=""
		goto *title_loop
	}
	goto *main_loop

//物を追加
*FallObjectAdd
	repeat OBJECT_TOTAL
	if object_exist(cnt)=0 {
		object_x(cnt)=rnd(640)
		object_y(cnt)=-30
		object_change_x(cnt)=2-rnd(5)
		object_change_y(cnt)=2+rnd(2)
		object_exist(cnt)=1
	}

	if bad_object_exist(cnt)=0 {
		bad_object_x(cnt)=rnd(640)
		bad_object_y(cnt)=-30
		bad_object_change_x(cnt)=2-rnd(5)
		bad_object_change_y(cnt)=2+rnd(2)
		bad_object_exist(cnt)=1
	}
	loop
	return

//上からもの落とす(演算処理)
*FallObjectCalc
	repeat OBJECT_TOTAL
	if object_exist(cnt)=1 {
		object_x(cnt)=object_x(cnt)+object_change_x(cnt)
		object_y(cnt)=object_y(cnt)+object_change_y(cnt)
		if object_y(cnt)>530 {
			//一番下まで行ったら消す
			object_exist(cnt)=0
		}
		if object_x(cnt)<-30 or object_x(cnt)>670 {
			//壁に当たったら反射
			object_change_x(cnt)=(-1)*object_change_x(cnt)
		}
	}
	if object_exist(cnt)=2 {
		//棒に引っかかって表示
		object_x(cnt)=player_x
		object_y(cnt)=object_y(cnt)+object_change_y(cnt)
		if object_y(cnt)>530 {
			//一番下まで行ったら消す
			dmmplay 2
			object_exist(cnt)=3
			score+100
			life+
		}
	}

	if bad_object_exist(cnt)=1 {
		bad_object_x(cnt)=bad_object_x(cnt)+bad_object_change_x(cnt)
		bad_object_y(cnt)=bad_object_y(cnt)+bad_object_change_y(cnt)
		if bad_object_y(cnt)>530 {
			//一番下まで行ったら消す
			bad_object_exist(cnt)=0
		}
		if bad_object_x(cnt)<-30 or bad_object_x(cnt)>670 {
			//壁に当たったら反射
			bad_object_change_x(cnt)=(-1)*bad_object_change_x(cnt)
		}
	}
	if bad_object_exist(cnt)=2 {
		//棒に引っかかって表示
		bad_object_x(cnt)=player_x
		bad_object_y(cnt)=bad_object_y(cnt)+bad_object_change_y(cnt)
		if bad_object_y(cnt)>530 {
			//一番下まで行ったら消す
			dmmplay 1
			bad_object_exist(cnt)=3
			score-100
			life-10
		}
	}
	loop
	return

//ものと接触しているか調べるのだ。ぼくはずんだもんなのだ()
*FallObjectCheck
	repeat OBJECT_TOTAL
	if abs(player_x-object_x(cnt))<OBJECT_SIZE/2 and abs(player_y-object_y(cnt))<OBJECT_SIZE/2 and object_exist(cnt)=1 {
		//get object!!!!!!
		dmmplay 3
		object_exist(cnt)=2
	}

	if abs(player_x-bad_object_x(cnt))<OBJECT_SIZE/2 and abs(player_y-bad_object_y(cnt))<OBJECT_SIZE/2 and bad_object_exist(cnt)=1 {
		//get object!!!!!!
		dmmplay 3
		bad_object_exist(cnt)=2
	}
	loop
	return

//上からもの落とす(描画処理)
*FallObjectDraw
	repeat OBJECT_TOTAL
	if object_exist(cnt)=1 or object_exist(cnt)=2 and object_y(cnt)>-30 and object_y(cnt)<500 {
		color object_color_r,object_color_g,object_color_b
		circle object_x(cnt)-(OBJECT_SIZE/2),object_y(cnt)-(OBJECT_SIZE/2),object_x(cnt)+(OBJECT_SIZE/2),object_y(cnt)+(OBJECT_SIZE/2)
		color 127+(object_color_r/2),127+(object_color_g/2),127+(object_color_b/2)
		circle object_x(cnt)-(OBJECT_SIZE/3),object_y(cnt)-(OBJECT_SIZE/3),object_x(cnt)+(OBJECT_SIZE/3),object_y(cnt)+(OBJECT_SIZE/3)
		color 255,255,255
		circle object_x(cnt)-(OBJECT_SIZE/4),object_y(cnt)-(OBJECT_SIZE/4),object_x(cnt)+(OBJECT_SIZE/4),object_y(cnt)+(OBJECT_SIZE/4)
	}

	if bad_object_exist(cnt)=1 or bad_object_exist(cnt)=2 and bad_object_y(cnt)>-30 and bad_object_y(cnt)<500 {
		color bad_object_color_r,bad_object_color_g,bad_object_color_b
		circle bad_object_x(cnt)-(OBJECT_SIZE/2),bad_object_y(cnt)-(OBJECT_SIZE/2),bad_object_x(cnt)+(OBJECT_SIZE/2),bad_object_y(cnt)+(OBJECT_SIZE/2)
		color 127+(bad_object_color_r/2),127+(bad_object_color_g/2),127+(bad_object_color_b/2)
		circle bad_object_x(cnt)-(OBJECT_SIZE/3),bad_object_y(cnt)-(OBJECT_SIZE/3),bad_object_x(cnt)+(OBJECT_SIZE/3),bad_object_y(cnt)+(OBJECT_SIZE/3)
		color 255,255,255
		circle bad_object_x(cnt)-(OBJECT_SIZE/4),bad_object_y(cnt)-(OBJECT_SIZE/4),bad_object_x(cnt)+(OBJECT_SIZE/4),bad_object_y(cnt)+(OBJECT_SIZE/4)
	}

	if object_exist(cnt)=3 {
		color object_color_r,object_color_g,object_color_b
		grect object_x(cnt),480,0,OBJECT_SIZE,300
	}
	if bad_object_exist(cnt)=3 {
		color bad_object_color_r,bad_object_color_g,bad_object_color_b
		grect bad_object_x(cnt),480,0,OBJECT_SIZE,300
	}
	loop
	return
	
*FallObjectEffect
	repeat OBJECT_TOTAL
	if object_exist(cnt)=3 {
		color object_color_r,object_color_g,object_color_b
		pos object_x(cnt),object_y(cnt)
		mes "+100"
		object_y(cnt)-3
		if object_y(cnt)<400 : object_exist(cnt)=0
	}
	if bad_object_exist(cnt)=3 {
		color bad_object_color_r,bad_object_color_g,bad_object_color_b
		pos bad_object_x(cnt),bad_object_y(cnt)
		mes "-100"
		bad_object_y(cnt)-3
		if bad_object_y(cnt)<400 : bad_object_exist(cnt)=0
	}
	loop
	return

*ScoreSound
	if (score-pre_score*1000)>=1000 and score>0 {
		if score_sound_sw=0 {
			dmmplay 4
			pre_score=(score/1000)
			score_sound_sw=1
		}
	}else{
		score_sound_sw=0
	}
	return

//以下はバレットオブジェクト管理用命令

*StageBulletCalc
	if cnt\20=0 and score<10000 {
		repeat 6
		BulletSet 320.0,100.0,sin(deg2rad(cnt_t+cnt*60))*5,cos(deg2rad(cnt_t+cnt*60))*5
		loop
		BulletReflect
	}else{
		cnt_t+
	}
	if cnt\10=0 and score>=10000 {
		cnt_t=cnt
		repeat 12
		BulletSet 320.0,100.0,sin(deg2rad(cnt_t+cnt*30))*5,cos(deg2rad(cnt_t+cnt*30))*5
		BulletSet 320.0,100.0,-sin(deg2rad(cnt_t+cnt*30))*5,-cos(deg2rad(cnt_t+cnt*30))*5
		loop
		//BulletReflect
	}
	BulletMove
	return

*StageBulletDraw
	BulletDraw
	return

#defcfunc PlayerInfo int PlayerInfoPrm1
	switch PlayerInfoPrm1
	case 0		//player_x
	return player_x

	case 1		//player_y
	return player_y

	swend
	return "error"

*ErrorDialog
	dialog "error"+err+" : "+lparam,1,"SystemError"
	end
//Program:Maple
//copyright all 2024 COMET.